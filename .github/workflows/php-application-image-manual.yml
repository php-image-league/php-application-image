name: PHP Application Image (single)
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag ("cli", "web", "web-dev")'
        required: true
        default: 'cli'
      php_version:
        description: 'PHP Version'
        required: true
        default: '7.0'
      server:
        description: 'Server ("fpm", leave empty when building the cli image).'
        default: ''
jobs:
  update-image:
    runs-on: ubuntu-latest
    steps:
      -
        name: combination check
        if: ${{ startsWith(github.event.inputs.php_version, '7') && github.event.inputs.tag == 'web-dev' }}
        run: |
            echo "web-dev needs PHP >= 8" 2>
            exit 1
      -
        name: combination check
        if: ${{ github.event.inputs.server && github.event.inputs.tag == 'cli' }}
        run: | 
            echo "'cli' can not be build with a server." 2>
            exit 1
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Checkout the code
        uses: actions/checkout@v3
        with:
          ref: 'main'
      - name: Pre process Dockerfile
        run: "make PHP_VERSION=${{ github.event.inputs.php_version }} TAG=${{ github.event.inputs.tag }} SERVER=${{ github.event.inputs.server }} compile-base"
      - name: Build docker image
        uses: docker/build-push-action@v3
        with:
          context: base
          file: base/Dockerfile
          build-args: "PHP_VERSION=${{ github.event.inputs.php_version }}"
          platforms: linux/amd64,linux/arm64
          push: true
          tags: "phpimageleague/php-application-server:${{ github.run_id }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Tagging of images
        run: make IMAGE=phpimageleague/php-application-server:${{ github.run_id }} PHP_VERSION=${{ matrix.php_version }} TAG=${{ matrix.tag }} SERVER=${{ matrix.server }} tag
